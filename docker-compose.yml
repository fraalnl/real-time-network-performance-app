services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: fraalnl/network-monitor:latest
    # image: ${DOCKER_IMAGE}:${DOCKER_TAG}   # built by Jenkins
    # simply starts containers using the image already built by Jenkins
    ports:
      - "8081:8081" # map container port 8081 to host port 8081
    environment:
      SPRING_PROFILES_ACTIVE: mysql
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/network_performance
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      # tells Spring Boot where Kafka is running inside Docker
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      # Creates a database named network_performance on startup
      MYSQL_DATABASE: network_performance
    ports:
      # Maps MySQL container’s port 3306 to host machine’s port 3306,
      # so you can connect from outside Docker (e.g. IDE or tools)
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql # everything MySQL server needs to restore its state
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "mysql" ]
      interval: 10s
      timeout: 5s
      retries: 10

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181" # Exposes Zookeeper’s client port 2181 to the host machine
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes" # allow connections without authentication

  kafka:
    image: bitnami/kafka:3.9
    ports:
      - "9092:9092" # Exposes Kafka’s broker port to the host
    environment:
      KAFKA_BROKER_ID: 1 # A unique ID for this Kafka broker
      # KAFKA_CFG_PROCESS_ROLES: broker        # the role for this Kafka node
      # KAFKA_CFG_NODE_ID: 1                   # unique node ID (integer)
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092 # Where Kafka listens for connections inside the container
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092 # What Kafka tells clients to use to connect
      ALLOW_PLAINTEXT_LISTENER: "yes" # plaintext (non-SSL)
    depends_on:
      - zookeeper

volumes:
  mysql-data:
